<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>jogo</title>
	<script src="sprit.js"></script>
	<style type="text/css">
	body{
	background-image: radial-gradient(#242323,#121212);
	background-repeat: no-repeat;
	background-size: 100%;
	background-attachment: fixed;	
	height: 100%;	
	}
	
		canvas
		{
			position: absolute;
			top: 0px;
			bottom: 0px;
			left: 0px;
			right: 0px;
			margin: auto;
		}

	</style>
</head>
<body>
<script type="text/javascript">
	//variaveis do jogo
	var canvas, ctx, ALTURA, LARGURA, maxPulo=40, speed = 6, estadoAtual,
	record, img, img1, img2,

	pontosParaNovaFase= [5,15,25,35,40,50,65,80,99],
	faseAtual=0,

	/*labelNovaFase = {
		texto: "",
		opacidade:0.0,

		fadeIn: function(dt){
			var fadeInId = setInterval(
				if (labelNovaFase.opacidade < 1.0){
				labelNovaFase.opacidade += 0.1; }
				else {
					resetInterval(fadeInId);
				}
			}, 10 = dt);

		},
		fadeOut: function(dt){
			var fadeOutId = setInterval(
				if (labelNovaFase.opacidade > 0.0){
				labelNovaFase.opacidade -= 0.1; }
				else {
					resetInterval(fadeOutId);
				}
			}, 10 = dt);

		};
	},*/

	estados={
		jogar: 0,
		jogando:1,
		perdeu:2
	},
	chao ={
		y: 550,
		x: 0,
		altura: 50,

		atualiza: function(){
			this.x -= speed;
			if(this.x <= -600)
				this.x = 0;

		},
		

		desenho: function () {
			spchao.desenha(this.x, this.y);
			spchao.desenha(this.x + spchao.largura, this.y);
		},
	},


	bloco={
		x:50,
		y:0.1,
		altura: spboneco.altura,
		largura: spboneco.largura,
		gravidade: 1,
		velocidade: 0,
		forcaDoPoder: 18,
		quantPulo:0,
		score:0,
		rodando: 0,
		vidas:3,
		colidindo: false,


		atualizar: function(){
			
			this.velocidade += this.gravidade;
			this.y += this.velocidade;
			this.rodando += Math.PI / 180 * speed+1;

			if (this.y > chao.y - this.altura && estadoAtual != estados.perdeu){
				this.y = chao.y - this.altura;
				this.quantPulo=0;
				this.velocidade=0;
			}
			
			if (this.y > 480 ) {
				this.cor = "#ff00ff";

			}
			else if (this.y < 500) {
				this.cor="#000000"
			} 
		},

		pular: function(){
			if (this.quantPulo < maxPulo) {
			this.velocidade = -this.forcaDoPoder;
			this.quantPulo++;}

		},

		reset: function(){
			this.velocidade = 0;
			this.y=0;
			if (this.score > record){
				localStorage.setItem("record", this.score);
				record = this.score;
			}
			this.vidas = 3
			this.score = 0;

		},

		desenho: function(){
			ctx.save();
			ctx.translate(this.x + this.largura / 2, this.y + this.altura / 2);
			ctx.rotate(this.rodando);
			spboneco.desenha(-this.largura/2, -this.altura /2);
			ctx.restore();
			
		}

	},
	obstaculos = {
		_obs: [],
		_cor: ["#ffbc1c","#ff1c1c","#ff85e1","#52a7ff","#ff527d"],
		_scorde:false,
		tempoStart: 100,
		inserir: function () {
			this._obs.push({
				x: LARGURA,
				largura: 20 + Math.floor(21 * Math.random()),
				altura: 30 + Math.floor(170 * Math.random()),
				cor: this._cor[Math.floor(5* Math.random())] 
			});
			this.tempoStart = 30 + Math.floor(40 * Math.random());
		},
		atualiza: function(){
			if (this.tempoStart == 0) 
				this.inserir();
			else 
				this.tempoStart--;


			for (var i = 0, tam = this._obs.length; i < tam; i++) {
				var obs1 = this._obs[i];
				obs1.x -= speed;
				
				if (!bloco.colidindo && bloco.x < obs1.x + obs1.largura && bloco.x + bloco.largura >= obs1.x && bloco.y + bloco.altura >= chao.y - obs1.altura) {
						bloco.colidindo = true;

						setTimeout(function() {
							bloco.colidindo = false;
						}, 500)

						if (bloco.vidas >= 1) {bloco.vidas--;}
						if (bloco.vidas == 0) {estadoAtual = estados.perdeu;}
					}
					
				
				else if (obs1.x <=0 && !obs1._scorde){ 
					bloco.score++;
					obs1._scorde = true;

					if (faseAtual < pontosParaNovaFase.length && bloco.score == pontosParaNovaFase[faseAtual]) {
						passarDeFase();
					}
				}

				else if (obs1.x <= -obs1.largura) {
					this._obs.splice(i,1);
					tam--;
					i--;

				}

			}


		},
		limpar: function(){
			this._obs = [];
		},
		desenho: function(){
			for (var i = 0, tam = this._obs.length; i < tam; i++){
				var obs = this._obs[i];
				ctx.fillStyle = obs.cor;
				ctx.fillRect(obs.x, chao.y -obs.altura, obs.largura, obs.altura);
			}
		}
	};
	function clique(event) {
		if (estadoAtual == estados.jogando) {
			bloco.pular();
		}
		else if (estadoAtual == estados.jogar) {
			estadoAtual = estados.jogando;
		}

		else if (estadoAtual == estados.perdeu) {
			estadoAtual = estados.jogar;
			obstaculos.limpar();
			bloco.reset();
		}

	}

	function passarDeFase() {
		speed++;
		faseAtual++;
		bloco.vidas++;

		/*labelNovaFase.texto = "Level " + faseAtual;
		labelNovaFase.fadeIn(0.4);

		setTimeout(function(){
			labelNovaFase.fadeOut(0.4);
		}, 800);*/
	}
	
	function main() 
	{
		ALTURA = window.innerHeight;
		LARGURA = window.innerWidth;

		if (LARGURA>=500) 
		{

			LARGURA=600;
			ALTURA=600;

		}

		canvas = document.createElement("canvas");
		canvas.width = LARGURA;
		canvas.height = ALTURA;
		canvas.style.border = "1px solid #000" ;

		ctx = canvas.getContext("2d");
		document.body.appendChild(canvas);
		document.addEventListener("mousedown", clique);
		estadoAtual = estados.jogar;
		record = localStorage.getItem("record");
		if (record == null)
			record = 0;

		img = new Image();
		img.src = "fundo.png";

		img1 = new Image();
		img1.src = "boneco.png";

		img2 = new Image();
		img2.src = "chao.png";

		rodar();

	}
	function rodar(){
		atualizar();
		desenha();

		window.requestAnimationFrame(rodar);
	}
	function atualizar() {
		

		bloco.atualizar();
		
		if (estadoAtual == estados.jogando) {
			obstaculos.atualiza();
			chao.atualiza();
		}
		
			
	}
	function desenha() {
		//ctx.fillStyle= "#50beff";
		//ctx.fillRect(0,0, LARGURA, ALTURA);
		bg.desenha(0,0);

		ctx.fillStyle="#fff";
		ctx.font = "50px Arial";
		ctx.fillText(bloco.score, 20, 62);
		ctx.fillText(bloco.vidas, 500, 62);

		/*ctx.fillStyle = "rgba(0,0,0, " +labelNovaFase.opacidade  + ")";
		ctx.fillText(labelNovaFase.texto, canvas.width / 2 - ctx.measureText(labelNovaFase.texto).width /2, canvas.height / 3);*/

		if (estadoAtual == estados.jogar) {
			ctx.fillStyle = "green";
			ctx.fillRect(LARGURA / 2 - 50, ALTURA /2 - 50, 100, 100);
			}
		else if (estadoAtual == estados.perdeu) {
			ctx.fillStyle= "red";
			ctx.fillRect(LARGURA / 2 - 50, ALTURA /2 - 50, 100, 100);

			ctx.save();
			ctx.translate(LARGURA /2, ALTURA/2);
			ctx.fillStyle = "#fff";
			
			
			if(bloco.score > record)
				ctx.fillText("Novo Recorde", -150, -65);
			
			else if(record < 10)
				ctx.fillText("Recorde " + record, -99, -65);
			
			else if(record >= 10 && record < 100)
				ctx.fillText("Recorde " + record, -112, -65);
			
			else
				ctx.fillText("Recorde " + record, -125, -65);
			
			
			if (bloco.score <10) 
				ctx.fillText(bloco.score, -13, 19);

			else if (bloco.score >= 10 &&bloco.score < 100) 
				ctx.fillText(bloco.score, -29, 19);

			else if (bloco.score >= 100 &&bloco.score < 1000) 
				ctx.fillText(bloco.score, -42, 19);
			else
				ctx.fillText(bloco.score, -55, 19);
			ctx.restore();
		}
		else if (estadoAtual == estados.jogando)
			obstaculos.desenho();

		chao.desenho();
		bloco.desenho();
	}
//inicializar
	main();
</script>

</body>
</html>
